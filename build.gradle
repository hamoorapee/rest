plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
    id 'io.freefair.lombok' version '6.5.0.3'
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

def junitVersion = "5.8.2",
    selenideVersion = "7.3.2",
    slf4jVersion = "1.7.32",
    restAssuredVersion = "5.4.0",
    allureVersion = "2.18.1",
    aspectjVersion = "1.9.9",
    assertJVersion = "3.25.3"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.aspectj:aspectjtools:$aspectjVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.13.2",
            "org.assertj:assertj-core:$assertJVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties System.getProperties()
    useJUnitPlatform()

    testLogging {
        events "started", "skipped", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}
